import os
import time
import threading
import feedparser
import telebot
from dotenv import load_dotenv
from telebot.apihelper import ApiTelegramException

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
SENT_NEWS_FILE = 'sent_news.txt'

def load_sent_news():
    if os.path.exists(SENT_NEWS_FILE):
        with open(SENT_NEWS_FILE, 'r', encoding='utf-8') as f:
            return set(line.strip() for line in f)
    return set()

def save_sent_news(news_id):
    with open(SENT_NEWS_FILE, 'a', encoding='utf-8') as f:
        f.write(news_id + '\n')

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN')
bot = telebot.TeleBot(BOT_TOKEN)

# RSS-–ª–µ–Ω—Ç—ã –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –ò–ò
RSS_FEEDS = [
    'https://www.technologyreview.com/topic/artificial-intelligence/feed',
    'https://deepmind.com/blog/feed/basic',
    'https://openai.com/blog/rss/',
    'http://ai.googleblog.com/feeds/posts/default?alt=rss',
    'https://towardsdatascience.com/feed',
]

# –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
sent_news = load_sent_news()

# ID –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
CHAT_ID = '@intsring'

def fetch_and_send_news(feed_url):
    global sent_news
    try:
        feed = feedparser.parse(feed_url)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—ã –≤ –ø–æ—Ä—è–¥–∫–µ –æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º
        for entry in reversed(feed.entries):
            news_id = entry.get('id') or entry.get('link')
            if news_id not in sent_news:
                title = entry.get('title', '–ù–æ–≤–æ—Å—Ç—å –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
                link = entry.get('link', '')
                message = f"üì∞ {title}\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: {link}"
                try:
                    bot.send_message(CHAT_ID, message)
                    sent_news.add(news_id)
                    save_sent_news(news_id)  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤–æ—Å—Ç–∏: {e}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")

def news_loop():
    while True:
        for feed_url in RSS_FEEDS:
            fetch_and_send_news(feed_url)
            time.sleep(600)  # –ü–∞—É–∑–∞ 10 –º–∏–Ω—É—Ç –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

@bot.message_handler(commands=['start', 'hello'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ–± –ò–ò –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç.")

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.reply_to(message, message.text)

def run_bot():
    bot.delete_webhook()  # –£–¥–∞–ª—è–µ–º webhook –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    while True:
        try:
            print("–ó–∞–ø—É—Å–∫ infinity_polling...")
            bot.infinity_polling(timeout=60, long_polling_timeout=60)
        except ApiTelegramException as e:
            print(f"–û—à–∏–±–∫–∞ Telegram API: {e}")
            if e.result.status_code == 409:
                print("–û—à–∏–±–∫–∞ 409: –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω.")
            time.sleep(10)
        except Exception as e:
            print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            time.sleep(10)

if __name__ == '__main__':
    threading.Thread(target=news_loop, daemon=True).start()
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    run_bot()
